{
  "version": 3,
  "sources": ["../../../../../../Labs/RS-Depannage/epaviste-projet/.netlify/functions/send-email.js"],
  "sourceRoot": "C:/Users/Jason/AppData/Local/Temp/tmp-5444-5KlGpzBuSr2x",
  "sourcesContent": ["import nodemailer from 'nodemailer';\r\n\r\nexport const handler = async (event) => {\r\n  // N'accepter que les requ\u00EAtes POST\r\n  if (event.httpMethod !== 'POST') {\r\n    return { statusCode: 405, body: 'M\u00E9thode non autoris\u00E9e' };\r\n  }\r\n\r\n  try {\r\n    // R\u00E9cup\u00E9rer les donn\u00E9es du formulaire\r\n    const { name, email, phone, postCode, message } = JSON.parse(event.body);\r\n\r\n    // Configuration du transporteur SMTP IonOS\r\n    const transporter = nodemailer.createTransport({\r\n      host: process.env.SMTP_HOST,           // ex: smtp.ionos.fr\r\n      port: Number(process.env.SMTP_PORT),   // ex: 465\r\n      secure: true,                          // Utilisation de SSL\r\n      auth: {\r\n        user: process.env.SMTP_USER,         // ex: contact@rsdepannage.com\r\n        pass: process.env.SMTP_PASS,         // mot de passe SMTP\r\n      },\r\n    });\r\n\r\n    // Pr\u00E9parer l'e-mail\r\n    const mailOptions = {\r\n      from: `\"Site RS D\u00E9pannage\" <${process.env.SMTP_USER}>`, // exp\u00E9diteur\r\n      to: process.env.SMTP_USER,       // destinataire (toi-m\u00EAme)\r\n      subject: `Nouveau message de ${name}`,\r\n      replyTo: email,                  // permet de r\u00E9pondre directement\r\n      text: `Nom       : ${name}\r\n\t\t\tEmail     : ${email}\r\n\t\t\tT\u00E9l\u00E9phone : ${phone}\r\n\t\t\tCode postal: ${postCode}\r\n\r\n\t\t\tMessage   :\r\n\t\t\t${message}`,\r\n\t\t\thtml: `\r\n\t\t\t\t<p><strong>Nom :</strong> ${name}</p>\r\n\t\t\t\t<p><strong>Email :</strong> ${email}</p>\r\n\t\t\t\t<p><strong>T\u00E9l\u00E9phone :</strong> ${phone}</p>\r\n\t\t\t\t<p><strong>Code postal :</strong> ${postCode}</p>\r\n\t\t\t\t<p><strong>Message :</strong><br/>${message.replace(/\\n/g, '<br/>')}</p>\r\n\t\t\t`,\r\n\t\t};\r\n\r\n    // Envoi de l'e-mail\r\n    await transporter.sendMail(mailOptions);\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify({ success: true }),\r\n    };\r\n  } catch (error) {\r\n    console.error(`Erreur lors de l'envoi du mail :', error`);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ success: false, error: error.message }),\r\n    };\r\n  }\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuB;AAEhB,IAAM,UAAU,OAAO,UAAU;AAEtC,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO,EAAE,YAAY,KAAK,MAAM,8BAAwB;AAAA,EAC1D;AAEA,MAAI;AAEF,UAAM,EAAE,MAAM,OAAO,OAAO,UAAU,QAAQ,IAAI,KAAK,MAAM,MAAM,IAAI;AAGvE,UAAM,cAAc,kBAAAA,QAAW,gBAAgB;AAAA,MAC7C,MAAM,QAAQ,IAAI;AAAA;AAAA,MAClB,MAAM,OAAO,QAAQ,IAAI,SAAS;AAAA;AAAA,MAClC,QAAQ;AAAA;AAAA,MACR,MAAM;AAAA,QACJ,MAAM,QAAQ,IAAI;AAAA;AAAA,QAClB,MAAM,QAAQ,IAAI;AAAA;AAAA,MACpB;AAAA,IACF,CAAC;AAGD,UAAM,cAAc;AAAA,MAClB,MAAM,2BAAwB,QAAQ,IAAI,SAAS;AAAA;AAAA,MACnD,IAAI,QAAQ,IAAI;AAAA;AAAA,MAChB,SAAS,sBAAsB,IAAI;AAAA,MACnC,SAAS;AAAA;AAAA,MACT,MAAM,eAAe,IAAI;AAAA,iBACd,KAAK;AAAA,uBACL,KAAK;AAAA,kBACJ,QAAQ;AAAA;AAAA;AAAA,KAGrB,OAAO;AAAA,MACT,MAAM;AAAA,gCACuB,IAAI;AAAA,kCACF,KAAK;AAAA,4CACD,KAAK;AAAA,wCACH,QAAQ;AAAA,wCACR,QAAQ,QAAQ,OAAO,OAAO,CAAC;AAAA;AAAA,IAErE;AAGE,UAAM,YAAY,SAAS,WAAW;AAEtC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,KAAK,CAAC;AAAA,IACxC;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,0CAA0C;AACxD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,OAAO,OAAO,MAAM,QAAQ,CAAC;AAAA,IAC/D;AAAA,EACF;AACF;",
  "names": ["nodemailer"]
}
